/*
 *    Copyright (c) 2019 - Javen Liu (github.com/jiefenn8)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'signing'
}

group = 'io.github.jiefenn8.graphloom'
description = 'GraphLoom semantic graph mapping library core API and implementation.'
archivesBaseName = 'graphloom-core'

version = '0.6.0-SNAPSHOT'

sourceCompatibility = 1.15
targetCompatibility = 1.15

repositories {
    mavenCentral()
}

//Integration test sources

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

sourceSets {
    integrationTest {
        java{
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

//Idea plugin

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

//JavaDoc and Sources Jars

javadoc {
    // without the -quiet option, the build fails
    options.addStringOption('Xdoclint:none', '-quiet')
}

java {
    withJavadocJar()
    withSourcesJar()
}

//Testing

test.finalizedBy jacocoTestReport

task integrationTest(type: Test){
    mustRunAfter test
    group = 'verification'
    description = 'Runs all integration tests.'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

//Reporting

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

task integrationTestReport(type :JacocoReport){
    dependsOn integrationTest
    group = 'verification'
    description = 'Generates code coverage report for the integration test task.'
    sourceSets sourceSets.main
    executionData integrationTest
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

integrationTest.finalizedBy integrationTestReport

//Dependencies

dependencies {
    //Test
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.7.7'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    //Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    //Core
    api group: 'org.apache.jena', name: 'jena-core', version: '3.5.0'

    //Utils
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
}

//Publishing

publishing {
    publications {
        graphloom(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
            pom {
                name = "GraphLoom Core"
                description = project.description
                url = "https://github.com/jiefenn8/graphloom"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "jiefenn8"
                        name = "Javen Liu"
                    }
                }
                scm {
                    connection = "scm:git:git//github.com:jiefenn8/graphloom.git"
                    developerConnection = "scm:git:ssh://github.com:jiefenn8/graphloom.git"
                    url = "https://github.com/jiefenn8/graphloom"
                }
            }

        }
    }
    repositories {
        maven {
            def snapshotRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def stagingRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.contains('SNAPSHOT') ? snapshotRepoUrl : stagingRepoUrl
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.graphloom
}
